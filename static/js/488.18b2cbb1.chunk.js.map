{"version":3,"file":"static/js/488.18b2cbb1.chunk.js","mappings":"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","sources":["webpack://supermetrics-assignment/./src/features/post-list/PostList.module.css?b789","features/post-list/PostList.tsx","features/post-list/formatDate.ts","webpack://supermetrics-assignment/./src/features/shared/ui/Input.module.css?4d8f","features/shared/ui/Input.tsx","../node_modules/@babel/runtime/helpers/esm/arrayLikeToArray.js","../node_modules/@babel/runtime/helpers/esm/slicedToArray.js","../node_modules/@babel/runtime/helpers/esm/arrayWithHoles.js","../node_modules/@babel/runtime/helpers/esm/iterableToArrayLimit.js","../node_modules/@babel/runtime/helpers/esm/unsupportedIterableToArray.js","../node_modules/@babel/runtime/helpers/esm/nonIterableRest.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"grid\":\"PostList_grid__prbz1\",\"list\":\"PostList_list__OG9R0\",\"user\":\"PostList_user__yBrqc\",\"activeUser\":\"PostList_activeUser__BMx+u\",\"post\":\"PostList_post__RFHGp\",\"postHeader\":\"PostList_postHeader__C7fGo\",\"postContent\":\"PostList_postContent__MHO78\",\"postListControls\":\"PostList_postListControls__SIsjd\",\"sortButtons\":\"PostList_sortButtons__G2jPr\",\"postFilterInput\":\"PostList_postFilterInput__ifPKY\",\"sortButton\":\"PostList_sortButton__2NzsO\",\"activeButton\":\"PostList_activeButton__24u0M\",\"postFilter\":\"PostList_postFilter__3xNI1\"};","import { useEffect, useState } from 'react'\nimport { selectSlToken } from '../auth/authSlice'\nimport {\n  selectUsers,\n  setActiveUser,\n  selectUserPosts,\n  getPostListThunk,\n  selectActiveUserId,\n  filterUsers,\n  filterPosts,\n  setSortByDate,\n  selectSortByDate,\n  selectStatus,\n} from './postListSlice'\nimport { useAppSelector, useAppDispatch } from '../../app/hooks'\n\nimport styles from './PostList.module.css'\nimport { formatDate } from './formatDate'\nimport { Input } from '../shared/ui/Input'\n\nexport default function PostList() {\n  const [userFilter, setUserFilter] = useState('')\n  const [postFilter, setPostFilter] = useState('')\n\n  const slToken = useAppSelector(selectSlToken)\n  const userList = useAppSelector(selectUsers)\n  const userPosts = useAppSelector(selectUserPosts)\n  const activeUserId = useAppSelector(selectActiveUserId)\n  const sortByDateOrder = useAppSelector(selectSortByDate)\n  const state = useAppSelector(selectStatus)\n  const dispatch = useAppDispatch()\n\n  useEffect(() => {\n    dispatch(getPostListThunk({ slToken, page: 1 }))\n  }, [dispatch, slToken])\n\n  if (state === 'loading') {\n    return <span>Loading...</span>\n  }\n\n  return (\n    <div className={styles.grid}>\n      <div className={styles.list}>\n        <Input\n          value={userFilter}\n          onChange={(event) => {\n            setUserFilter(event.target.value)\n            dispatch(filterUsers(event.target.value))\n          }}\n          size=\"small\"\n        />\n        {userList.map((user) => (\n          <div\n            key={user.id}\n            className={`${styles.user} ${\n              user.id === activeUserId ? styles.activeUser : ''\n            }`}\n            onClick={() => dispatch(setActiveUser(user.id))}\n          >\n            <span>{user.name}</span>\n            <div className={styles.count}>{user.postIds.length}</div>\n          </div>\n        ))}\n      </div>\n\n      <div className={styles.list}>\n        <div className={styles.postListControls}>\n          <div className={styles.sortButtons}>\n            <button\n              className={`${styles.sortButton} ${\n                sortByDateOrder === 'asc' && styles.activeButton\n              }`}\n              type=\"button\"\n              onClick={() => dispatch(setSortByDate('asc'))}\n            >\n              ðŸ”¼\n            </button>\n            <button\n              className={`${styles.sortButton} ${\n                sortByDateOrder === 'desc' && styles.activeButton\n              }`}\n              type=\"button\"\n              onClick={() => dispatch(setSortByDate('desc'))}\n            >\n              ðŸ”½\n            </button>\n          </div>\n          <Input\n            classNames={styles.postFilter}\n            value={postFilter}\n            onChange={(event) => {\n              setPostFilter(event.target.value)\n              dispatch(filterPosts(event.target.value))\n            }}\n            size=\"small\"\n          />\n        </div>\n\n        {userPosts.map((post) => (\n          <div key={post.id} className={styles.post}>\n            <div className={styles.postHeader}>\n              {formatDate(post.created_time)}\n            </div>\n            <div className={styles.postContent}>{post.message}</div>\n          </div>\n        ))}\n      </div>\n    </div>\n  )\n}\n","export const formatDate = (date: string) => {\n\treturn new Intl.DateTimeFormat('en-GB', {\n\t\tyear: 'numeric',\n\t\tmonth: 'long',\n\t\tday: 'numeric',\n\t\thour: 'numeric',\n\t\tminute: 'numeric',\n\t\tsecond: 'numeric',\n\t\thour12: false,\n\t}).format(new Date(date))\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"input\":\"Input_input__DYTa1\",\"small\":\"Input_small__tC9Xn\",\"inputContainer\":\"Input_inputContainer__67F0r\"};","import { ComponentProps } from 'react'\nimport styles from './Input.module.css'\n\ntype Props = {\n  value: ComponentProps<'input'>['value']\n  onChange: ComponentProps<'input'>['onChange']\n  label?: string\n  classNames?: string\n  id?: ComponentProps<'input'>['name']\n  type?: ComponentProps<'input'>['type']\n  required?: ComponentProps<'input'>['required']\n  size?: 'small' | 'regular'\n}\n\nexport const Input = ({\n  value,\n  onChange,\n  label,\n  classNames = '',\n  id = '',\n  type = 'text',\n  required,\n  size = 'regular',\n}: Props) => (\n  <div className={`${styles.inputContainer} ${classNames}`}>\n    {label && <label htmlFor={id}>{label}</label>}\n    <input\n      className={`${styles.input} ${size === 'small' && styles.small}`}\n      id={id}\n      type={type}\n      value={value}\n      onChange={onChange}\n      required={required}\n    />\n  </div>\n)\n","export default function _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n\n  for (var i = 0, arr2 = new Array(len); i < len; i++) {\n    arr2[i] = arr[i];\n  }\n\n  return arr2;\n}","import arrayWithHoles from \"./arrayWithHoles.js\";\nimport iterableToArrayLimit from \"./iterableToArrayLimit.js\";\nimport unsupportedIterableToArray from \"./unsupportedIterableToArray.js\";\nimport nonIterableRest from \"./nonIterableRest.js\";\nexport default function _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || unsupportedIterableToArray(arr, i) || nonIterableRest();\n}","export default function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}","export default function _iterableToArrayLimit(arr, i) {\n  var _i = arr == null ? null : typeof Symbol !== \"undefined\" && arr[Symbol.iterator] || arr[\"@@iterator\"];\n\n  if (_i == null) return;\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n\n  var _s, _e;\n\n  try {\n    for (_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}","import arrayLikeToArray from \"./arrayLikeToArray.js\";\nexport default function _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(o);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return arrayLikeToArray(o, minLen);\n}","export default function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}"],"names":["PostList","useState","userFilter","setUserFilter","postFilter","setPostFilter","slToken","useAppSelector","selectSlToken","userList","selectUsers","userPosts","selectUserPosts","activeUserId","selectActiveUserId","sortByDateOrder","selectSortByDate","state","selectStatus","dispatch","useAppDispatch","useEffect","getPostListThunk","page","className","styles","Input","I","value","onChange","event","target","filterUsers","size","map","user","id","onClick","setActiveUser","name","postIds","length","type","setSortByDate","classNames","filterPosts","post","date","created_time","Intl","DateTimeFormat","year","month","day","hour","minute","second","hour12","format","Date","message","label","required","htmlFor","_arrayLikeToArray","arr","len","i","arr2","Array","_slicedToArray","isArray","_i","Symbol","iterator","_s","_e","_arr","_n","_d","call","next","done","push","err","o","minLen","n","Object","prototype","toString","slice","constructor","from","test","TypeError"],"sourceRoot":""}